(window.webpackJsonp = window.webpackJsonp || []).push([[0], { 11(e, t, a) { e.exports = `${a.p}static/media/logo.8f7611ae.svg`; },
  12(e, t, a) { e.exports = `${a.p}static/media/vSign.e38b395c.svg`; },
  13(e, t, a) { e.exports = `${a.p}static/media/xSign.4072126c.svg`; },
  15(e, t, a) { e.exports = a(86); },
  24(e, t, a) {},
  86(e, t, a) {
    a.r(t); const n = a(1); const r = a.n(n); const o = a(10); const c = a.n(o); const i = a(5); const s = (a(24), a(14)); const l = a(3); const u = a.n(l); const m = a(6); const p = a(2); const d = a(0); const f = a(11); const _ = a.n(f); const h = function (e) { e.props, e.isOpen; const t = e.loggedIn; const a = e.handleLogout; const n = e.email; const o = (e.mobileMenu, e.showMobileIcon, Object(d.f)().pathname); return r.a.createElement("header", { className: "header" }, r.a.createElement(i.b, { className: "logo", to: "/" }, r.a.createElement("img", { id: "site-logo", src: _.a, alt: "Around the USA logo" })), t ? r.a.createElement("div", { className: "header__menu", email: n }, r.a.createElement("h2", { className: "header__user-email" }, n), r.a.createElement(i.b, { className: "header__page-link", to: "/signin", onClick: a }, "Log out")) : r.a.createElement(r.a.Fragment, null, o === "/signin" ? r.a.createElement(i.b, { to: "/signup", className: "header__page-link" }, "Sign up") : r.a.createElement(i.b, { to: "/signin", className: "header__page-link" }, "Log in"))); }; const g = r.a.createContext(); function b(e) { const t = e.onCardClick; const a = e.card; const n = e.onCardLike; const o = e.onCardDelete; const c = r.a.useContext(g); const i = a.owner._id === c._id; const s = "elements__trash ".concat(i ? "elements__trash" : "elements__trash_disabled"); const l = a.likes.some((e) => e._id === c._id); const u = '"elements__heart" '.concat(l ? "elements__heart elements__heart_active" : "elements__heart"); return r.a.createElement("li", { className: "elements__element" }, r.a.createElement("button", { className: s, type: "button", "aria-label": "delete card", onClick() { o(a); } }), r.a.createElement("img", { className: "elements__image", src: a.link, alt: a.name, onClick() { t(a); } }), r.a.createElement("div", { className: "elements__info" }, r.a.createElement("h2", { className: "elements__text" }, a.name), r.a.createElement("div", { className: "elements__like-container" }, r.a.createElement("button", { className: u, type: "button", "aria-label": "like card", onClick() { n(a); } }), r.a.createElement("div", { className: "elements__number-of-likes" }, a.likes.length)))); } function E(e) { const t = e.onEditAvatarClick; const a = e.onEditProfileClick; const n = e.onAddPlaceClick; const o = e.onCardClick; const c = e.onCardLike; const i = e.onCardDelete; const s = e.cards; const l = r.a.useContext(g); return r.a.createElement("main", null, r.a.createElement("section", { className: "profile" }, r.a.createElement("div", { className: "profile__avatar-wrapper" }, r.a.createElement("img", { className: "profile__avatar", src: l.avatar, alt: "My Avatar" }), r.a.createElement("button", { onClick: t, type: "button", "aria-label": "edit-avatar-button", className: "profile__avatar-edit-button" })), r.a.createElement("div", { className: "profile__info" }, r.a.createElement("div", null, r.a.createElement("h1", { className: "profile__name" }, l.name), r.a.createElement("button", { onClick: a, "aria-label": "edit-button", type: "button", className: "profile__edit-button", name: "edit" })), r.a.createElement("h2", { className: "profile__title" }, l.about)), r.a.createElement("button", { onClick: n, type: "button", "aria-label": "add-button", className: "profile__add-button" })), r.a.createElement("section", { className: "elements" }, r.a.createElement("ul", { className: "elements__list" }, s.map((e) => r.a.createElement(b, { card: e, key: e._id, onCardClick: o, onCardLike: c, onCardDelete: i }))))); } const v = function () { return r.a.createElement("footer", { className: "footer" }, r.a.createElement("p", { className: "footer__copyright" }, "\xa9 ", (new Date()).getFullYear(), " Sara Weissman")); }; function k(e) { const t = e.name; const a = e.isOpen; const n = e.onClose; const o = e.children; return r.a.useEffect(() => { if (a) { const e = function (e) { e.key === "Escape" && n(); }; return document.addEventListener("keydown", e), function () { return document.removeEventListener("keydown", e); }; } }, [a, n]), r.a.createElement("div", { className: "modal ".concat(a ? "modal_open" : "", " modal_type_").concat(t) }, o); } function C(e) { return r.a.createElement(k, { onClose: e.onClose, isOpen: e.isOpen, name: e.name }, r.a.createElement("div", { className: "modal__image-wrapper" }, r.a.createElement("button", { type: "button", "aria-label": "close-button", className: "modal__close-button modal__close-button_type-preview", onClick: e.onClose }), r.a.createElement("figure", null, r.a.createElement("img", { src: e.imageLink, alt: e.imageText, className: "modal__image-container" }), r.a.createElement("figcaption", { className: "modal__image-caption" }, e.imageText)))); } function y(e) { return r.a.createElement(k, { onClose: e.onClose, isOpen: e.isOpen, name: e.name }, r.a.createElement("div", { className: "modal__container" }, r.a.createElement("button", { type: "button", "aria-label": "close-button", className: "modal__close-button", onClick: e.onClose }), r.a.createElement("h3", { className: "modal__title" }, e.title), r.a.createElement("form", { action: "#", className: "form form-".concat(e.name), name: "form-".concat(e.name), onSubmit: e.onSubmit }, e.children, r.a.createElement("button", { type: "submit", className: "form__button form__button_type-".concat(e.name), "aria-label": "delete-button" }, " ", e.buttonText)))); } function N(e) { const t = r.a.useContext(g); const a = r.a.useState(""); const n = Object(p.a)(a, 2); const o = n[0]; const c = n[1]; const i = r.a.useState(""); const s = Object(p.a)(i, 2); const l = s[0]; const u = s[1]; return r.a.useEffect(() => { c(t.name || ""), u(t.about || ""); }, [t, e.isOpen]), r.a.createElement(y, { name: "edit-profile", onClose: e.onClose, isOpen: e.isOpen, onSubmit(t) { t.preventDefault(), e.onUpdateUser({ name: o, about: l }); }, title: "Edit profile", buttonText: "Save" }, r.a.createElement("input", { id: "input_type_name", type: "text", value: o, onChange(e) { c(e.target.value); }, className: "form__input form__input_type_name", placeholder: "name", name: "name", minLength: "2", maxLength: "40", required: !0 }), r.a.createElement("span", { id: "input_type_name-error", className: "form__error" }), r.a.createElement("input", { id: "input_type_job", type: "text", value: l, onChange(e) { u(e.target.value); }, className: "form__input form__input_type_job", placeholder: "profession", name: "job", minLength: "2", maxLength: "200", required: !0 }), r.a.createElement("span", { id: "input_type_job-error", className: "form__error" })); } function S(e) { const t = r.a.useRef(); return r.a.useEffect(() => { t.current.value = ""; }, []), r.a.createElement(y, { name: "edit-avatar", onClose: e.onClose, isOpen: e.isOpen, onSubmit(a) { a.preventDefault(), e.onUpdateAvatar({ avatar: t.current.value }); }, title: "Change profile picture", buttonText: "Save" }, r.a.createElement("input", { ref: t, id: "input_type_avatar-url", type: "url", className: "form__input form__input_type_link", placeholder: "avatar link", name: "link", required: !0 }), r.a.createElement("span", { id: "input_type_avatar-url-error", className: "form__error_visible" })); } function O(e) { const t = r.a.useState(""); const a = Object(p.a)(t, 2); const n = a[0]; const o = a[1]; const c = r.a.useState(""); const i = Object(p.a)(c, 2); const s = i[0]; const l = i[1]; return r.a.useEffect(() => { o(""), l(""); }, [e.isOpen]), r.a.createElement(y, { name: "add-place", onClose: e.onClose, isOpen: e.isOpen, onSubmit(t) { t.preventDefault(), e.onAddPlaceSubmit({ name: n, link: s }); }, title: "New place", buttonText: "Create" }, r.a.createElement("input", { onChange(e) { o(e.target.value); }, value: n || "", id: "input_type_place", type: "text", className: "form__input form__input_type_place", placeholder: "Title", name: "place", minLength: "2", maxLength: "30", required: !0 }), r.a.createElement("span", { id: "input_type_place-error", className: "form__error" }), r.a.createElement("input", { onChange(e) { l(e.target.value); }, value: s || "", id: "input_type_url", type: "url", className: "form__input form__input_type_link", placeholder: "Image link", name: "link", required: !0 }), r.a.createElement("span", { id: "input_type_url-error", className: "form__error" })); } function x(e) { return r.a.createElement(y, { name: "confirm-delete", title: "Are you Sure?", buttonText: "Yes", isOpen: e.isOpen, onSubmit: e.onSubmit }); } function j(e) { const t = r.a.useState(""); const a = Object(p.a)(t, 2); const n = a[0]; const o = a[1]; const c = r.a.useState(""); const s = Object(p.a)(c, 2); const l = s[0]; const u = s[1]; return r.a.createElement("div", { className: "login" }, r.a.createElement("p", { className: "login__title" }, "Welcome back!"), r.a.createElement("form", { onSubmit(t) { t.preventDefault(), n && l ? e.onSubmit(n, l) : console.log("could not log in"); }, className: "login__form" }, r.a.createElement("input", { className: "login__input", id: "email", name: "email", placeholder: "Email", type: "text", value: n, onChange(e) { o(e.target.value); } }), r.a.createElement("input", { className: "login__input", id: "password", name: "password", type: "password", placeholder: "Password", value: l, onChange(e) { u(e.target.value); } }), r.a.createElement("button", { type: "submit", className: "login__button" }, "Log in")), r.a.createElement(i.b, { to: "/signup", className: "login__link" }, "Not a member yet? Sign up here!")); } function w(e) { const t = r.a.useState(""); const a = Object(p.a)(t, 2); const n = a[0]; const o = a[1]; const c = r.a.useState(""); const s = Object(p.a)(c, 2); const l = s[0]; const u = s[1]; return r.a.createElement("div", { className: "login" }, r.a.createElement("h1", { className: "login__title" }, "Sign Up"), r.a.createElement("form", { className: "login__form", onSubmit(t) { t.preventDefault(), n && l ? e.onSubmit(n, l) : console.log("could not register"); } }, r.a.createElement("input", { className: "login__input", name: "email", placeholder: "Email", type: "email", value: n, onChange(e) { o(e.target.value); } }), r.a.createElement("input", { className: "login__input", name: "password", placeholder: "Password", type: "password", value: l, onChange(e) { u(e.target.value); } }), r.a.createElement("button", { className: "login__button", type: "submit" }, "Sign Up")), r.a.createElement(i.b, { to: "/signin", className: "login__link" }, "Already a member? Log in here!")); } const T = function (e) { const t = e.loggedIn; const a = e.redirectPath; const n = void 0 === a ? "/signup" : a; const o = e.children; return t ? o : r.a.createElement(d.a, { to: n, replace: !0 }); }; const L = a(12); const A = a.n(L); const P = a(13); const R = a.n(P); function U(e) { return r.a.createElement(k, { onClose: e.onClose, isOpen: e.isOpen, name: e.name }, r.a.createElement("div", { className: "modal__container" }, r.a.createElement("button", { type: "button", "aria-label": "close-button", className: "modal__close-button", onClick: e.onClose }), e.isRegistered ? r.a.createElement(r.a.Fragment, null, r.a.createElement("img", { src: A.a, alt: "success" }), r.a.createElement("h2", { className: "modal__title_type_tooltip" }, "Success! You have now been registered.")) : r.a.createElement(r.a.Fragment, null, r.a.createElement("img", { src: R.a, alt: "failure" }), r.a.createElement("h2", { className: "modal__title_type_tooltip" }, "Oops, something went wrong! Please try again.")))); } const I = a(7); const D = a(8); const B = new (function () { function e(t) { Object(I.a)(this, e), this._BASE_URL = t.BASE_URL; } return Object(D.a)(e, [{ key: "checkResponse", value(e) { return e.ok ? e.json() : Promise.reject("Error Type: \n    ".concat(e.status, " ").concat(e.statusText)); } }, { key: "signup", value(e, t) { return fetch("".concat(this._BASE_URL, "/signup"), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ email: e, password: t }) }).then(this.checkResponse); } }, { key: "signin", value(e, t) { return fetch("".concat(this._BASE_URL, "/signin"), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ email: e, password: t }) }).then(this.checkResponse).then((e) => (localStorage.setItem("jwt", e.jwt), e)); } }, { key: "checkToken", value(e) { return fetch("".concat(this._BASE_URL, "/users/me"), { method: "GET", headers: { Accept: "application/json", "Content-Type": "application/json", Authorization: "Bearer ".concat(e) } }).then(this.checkResponse).then((e) => e); } }]), e; }())({ BASE_URL: "http://localhost:3000/" }); const F = new (function () { function e(t) { Object(I.a)(this, e), this.checkResponse = function (e) { return e.ok ? e.json() : Promise.reject("Error Type: \n    ".concat(e.status, " ").concat(e.statusText)); }, this._url = t.baseUrl, this._token = t.token, this._headers = { authorization: this._token, "Content-type": "application/json" }; } return Object(D.a)(e, [{ key: "getData", value: (function () { const e = Object(m.a)(u.a.mark(function e() { let t; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/users/me"), { method: "GET", headers: this._headers }); case 2: return t = e.sent, e.abrupt("return", this.checkResponse(t)); case 4: case "end": return e.stop(); } }, e, this); })); return function () { return e.apply(this, arguments); }; }()) }, { key: "getInitialCards", value: (function () { const e = Object(m.a)(u.a.mark(function e() { let t; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/cards"), { method: "GET", headers: this._headers }); case 2: return t = e.sent, e.abrupt("return", this.checkResponse(t)); case 4: case "end": return e.stop(); } }, e, this); })); return function () { return e.apply(this, arguments); }; }()) }, { key: "editUserInfo", value: (function () { const e = Object(m.a)(u.a.mark(function e(t, a) { let n; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/users/me/"), { method: "PATCH", headers: this._headers, body: JSON.stringify({ name: t, about: a }) }); case 2: return n = e.sent, e.abrupt("return", this.checkResponse(n)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t, a) { return e.apply(this, arguments); }; }()) }, { key: "addPlaceCard", value: (function () { const e = Object(m.a)(u.a.mark(function e(t, a) { let n; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/cards"), { method: "POST", headers: this._headers, body: JSON.stringify({ name: t, link: a }) }); case 2: return n = e.sent, e.abrupt("return", this.checkResponse(n)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t, a) { return e.apply(this, arguments); }; }()) }, { key: "deleteCard", value: (function () { const e = Object(m.a)(u.a.mark(function e(t) { let a; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/cards/").concat(t), { method: "DELETE", headers: this._headers }); case 2: return a = e.sent, e.abrupt("return", this.checkResponse(a)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t) { return e.apply(this, arguments); }; }()) }, { key: "likeCard", value: (function () { const e = Object(m.a)(u.a.mark(function e(t) { let a; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/cards/likes/").concat(t), { method: "PUT", headers: this._headers }); case 2: return a = e.sent, e.abrupt("return", this.checkResponse(a)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t) { return e.apply(this, arguments); }; }()) }, { key: "dislikeCard", value: (function () { const e = Object(m.a)(u.a.mark(function e(t) { let a; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/cards/likes/").concat(t), { method: "DELETE", headers: this._headers }); case 2: return a = e.sent, e.abrupt("return", this.checkResponse(a)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t) { return e.apply(this, arguments); }; }()) }, { key: "editAvatar", value: (function () { const e = Object(m.a)(u.a.mark(function e(t) { let a; return u.a.wrap(function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.next = 2, fetch("".concat(this._url, "/users/me/avatar"), { method: "PATCH", headers: this._headers, body: JSON.stringify({ avatar: t }) }); case 2: return a = e.sent, e.abrupt("return", this.checkResponse(a)); case 4: case "end": return e.stop(); } }, e, this); })); return function (t) { return e.apply(this, arguments); }; }()) }]), e; }())({ token: "b211c19a-1dd2-41b6-b48a-d98d5e63db67", baseUrl: "http://localhost:3000/" }); function J() {
      const e = r.a.useState(!1); const t = Object(p.a)(e, 2); const a = t[0]; const n = t[1]; const o = r.a.useState(!1); const c = Object(p.a)(o, 2); const i = c[0]; const l = c[1]; const f = r.a.useState(!1); const _ = Object(p.a)(f, 2); const b = _[0]; const k = _[1]; const y = r.a.useState(!1); const L = Object(p.a)(y, 2); const A = L[0]; const P = L[1]; const R = r.a.useState(!1); const I = Object(p.a)(R, 2); const D = I[0]; const J = I[1]; const q = r.a.useState({}); const M = Object(p.a)(q, 2); const G = M[0]; const Y = M[1]; const z = r.a.useState([]); const H = Object(p.a)(z, 2); const W = H[0]; const K = H[1]; const Q = r.a.useState({}); const V = Object(p.a)(Q, 2); const X = V[0]; const Z = V[1]; const $ = r.a.useState({}); const ee = Object(p.a)($, 2); const te = ee[0]; const ae = ee[1]; const ne = r.a.useState(!1); const re = Object(p.a)(ne, 2); const oe = re[0]; const ce = re[1]; const ie = r.a.useState(!1); const se = Object(p.a)(ie, 2); const le = se[0]; const ue = se[1]; const me = r.a.useState(!1); const pe = Object(p.a)(me, 2); const de = pe[0]; const fe = pe[1]; const _e = Object(d.g)(); function he(e) { K((t) => t.map((t) => (t._id === e._id ? e : t))); } function ge(e) { e.likes.some((e) => e._id.toString() === X._id) ? F.dislikeCard(e._id.toString()).then((e) => { he(e); }).catch((e) => { console.log(e.status, e.statusText); }) : F.likeCard(e._id.toString()).then((e) => { he(e); }).catch((e) => { console.log(e.status, e.statusText); }); } function be(e) { Y(e), P(!0); } function Ee() { k(!0); } function ve() { n(!0); } function ke() { l(!0); } function Ce(e) { J(!0), Y(e); } function ye() { n(!1), l(!1), k(!1), P(!1), J(!1), ce(!1), Y({}); } return r.a.useEffect(() => { const e = localStorage.getItem("jwt"); e && B.checkToken(e).then((e) => { if (e) { const t = { email: e.data.email, id: e.data._id }; ae(t), fe(!0), _e.push("/"); } }).catch((e) => console.error(e.status, e.statusText)); }, []), r.a.useEffect(() => { de && _e("/"); }, [de]), r.a.useEffect(() => { F.getData().then((e) => { e && Z(e); }).catch((e) => { console.log(e.status, e.statusText); }); }, []), r.a.useEffect(() => { Object(m.a)(u.a.mark(function e() { let t; return u.a.wrap((e) => { for (;;) switch (e.prev = e.next) { case 0: return e.prev = 0, e.next = 3, F.getInitialCards(); case 3: (t = e.sent) && K(t), e.next = 10; break; case 7: e.prev = 7, e.t0 = e.catch(0), console.log(e.t0); case 10: case "end": return e.stop(); } }, e, null, [[0, 7]]); }))(); }, []), r.a.createElement("div", { className: "page" }, r.a.createElement(g.Provider, { value: X }, r.a.createElement("div", { className: "main" }, r.a.createElement(h, { loggedIn: de, email: te.email, handleLogout() { localStorage.removeItem("jwt"), fe(!1), _e.push("/signin"); } }), r.a.createElement(E, { loggedIn: de, onEditProfileClick: ve, onAddPlaceClick: ke, onEditAvatarClick: Ee, onCardClick: be, cards: W, onCardLike: ge, onCardDelete: Ce }), r.a.createElement(d.d, null, r.a.createElement(d.b, { path: "/signup",
        element: r.a.createElement(w, { onSubmit(e, t) {
          B.signup(e, t).then((e) => { ue(!!e); }).then(() => { fe(!0), _e("/"); }).catch((e) => { console.log(e.status, e.statusText); })
            .finally(() => { ce(!0); });
        } }) }), r.a.createElement(d.b, { path: "/signin", element: r.a.createElement(j, { onSubmit(e, t) { B.signin(e, t).then((t) => { t.token && (localStorage.setItem("jwt", t.token), ae({ email: e }), fe(!0), _e("/")); }).catch((e) => { console.log(e.status, e.statusText); }); } }) }), r.a.createElement(d.b, { exact: !0, path: "/", loggedIn: de, element: r.a.createElement(T, { loggedIn: de, email: te.email }, r.a.createElement(E, { loggedIn: de, onEditProfileClick: ve, onAddPlaceClick: ke, onEditAvatarClick: Ee, onCardClick: be, cards: W, onCardLike: ge, onCardDelete: Ce })) }), r.a.createElement(d.b, { path: "*", element: r.a.createElement(d.a, { to: "signup" }) })), r.a.createElement(N, { isOpen: a, onClose: ye, onUpdateUser(e) { F.editUserInfo(e.name, e.about).then((e) => { Z(e), ye(); }).catch((e) => { console.log(e.status, e.statusText); }); } }), r.a.createElement(S, { isOpen: b, onClose: ye, onUpdateAvatar(e) { F.editAvatar(e.avatar).then((e) => { Z(e), ye(); }).catch((e) => { console.log(e.status, e.statusText); }); } }), r.a.createElement(O, { isOpen: i, onClose: ye, onAddPlaceSubmit(e) { F.addPlaceCard(e.name, e.link).then((e) => { K([e].concat(Object(s.a)(W))), ye(); }).catch((e) => { console.log(e.status, e.statusText); }); } }), r.a.createElement(x, { isOpen: D, onClose: ye, onSubmit(e) { e.preventDefault(), F.deleteCard(G._id).then(() => { K((e) => e.filter((e) => e._id !== G._id)), ye(); }).catch((e) => { console.log(e.status, e.statusText); }); } }), r.a.createElement(C, { name: "preview-image", onClose: ye, isOpen: A, imageLink: G.link, imageText: G.name }), r.a.createElement(U, { name: "tooltip", isOpen: oe, onClose: ye, isRegistered: le }), r.a.createElement(v, null))));
    } const q = function (e) { e && e instanceof Function && a.e(1).then(a.bind(null, 87)).then((t) => { const a = t.getCLS; const n = t.getFID; const r = t.getFCP; const o = t.getLCP; const c = t.getTTFB; a(e), n(e), r(e), o(e), c(e); }); }; c.a.createRoot(document.getElementById("root")).render(r.a.createElement(r.a.StrictMode, null, r.a.createElement(i.a, null, r.a.createElement(J, null)))), q();
  } }, [[15, 3, 2]]]);
// # sourceMappingURL=main.5e94c0d1.chunk.js.map
